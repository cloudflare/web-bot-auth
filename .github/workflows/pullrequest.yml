name: Pull Request

on:
  push:
  pull_request:

jobs:
  test-typescript:
    name: Test TypeScript
    timeout-minutes: 5
    strategy:
      matrix:
        os: [ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - run: npm ci
      - run: npm run build
      - run: npm run lint
      - run: npm run test

  test-rust:
    name: Test Rust
    timeout-minutes: 5
    strategy:
      matrix:
        os: [ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Set rust toolchain
        run: rustup override set 1.87 && rustup component add clippy rustfmt && rustup target add wasm32-unknown-unknown
      - run: cargo fetch
      - run: cargo build --all --verbose --exclude plexi-cli --all-features --tests
      - run: cargo build --all --verbose --exclude plexi-cli --exclude http-signature-directory --all-features --tests --target wasm32-unknown-unknown
      - run: cargo check --tests --examples --benches --all-features
      - run: cargo clippy --all-features --all-targets -- -D warnings
      - run: cargo fmt --all -- --check
      - run: cargo doc --all --exclude plexi-cli --all-features --document-private-items
      - run: cargo test --all --verbose --exclude plexi-cli --all-features

  deploy-rust:
    name: Deploy Rust Crates
    timeout-minutes: 5
    env:
        # This token can be regenerated by visiting https://crates.io/me,
        # generating a new API token with `publish-update` permissions,
        # scoping it to just `web-bot-auth` and `http-signature-directory`
        # crates, and uploading to Github.
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_API_TOKEN }}
    strategy:
      matrix:
        os: [ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - "test-rust"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Set rust toolchain
        run: rustup override set 1.87
      - run: cargo publish -p web-bot-auth  # will fail if we don't bump the version
        continue-on-error: true
      - run: cargo publish -p http-signature-directory # will fail if we don't bump the version
        continue-on-error: true